// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  name          String
  email         String?   @unique
  password      String?
  emailVerified DateTime? @map("email_verified")
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]

  @@map("users")
}

model Account {
  id                String   @id @default(cuid())
  userId            String   @map("user_id")
  type              String?
  provider          String
  providerAccountId String   @map("provider_account_id")
  token_type        String?
  refresh_token     String?  @db.Text
  access_token      String?  @db.Text
  expires_at        Int?
  scope             String?
  id_token          String?  @db.Text
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  userId       String?  @map("user_id")
  sessionToken String   @unique @map("session_token") @db.Text
  accessToken  String?  @map("access_token") @db.Text
  expires      DateTime
  user         User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("sessions")
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model Players {
  id           Int      @id @default(autoincrement())
  extId        Int
  first_name   String?
  last_name    String?
  nickname     String?
  en_nickname  String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("players")
}

model Parser {
  id           Int      @id @default(autoincrement())
  date         DateTime @default(now())
  rest         Int

  @@map("parser")
}

model Days {
  id           Int      @id @default(autoincrement())
  day          DateTime
  extId        Int
  order        Int

  @@map("days")
}

model Contests {
  id           Int      @id @default(autoincrement())
  extId        Int
  fp_id        Int
  sp_id        Int
  fp_score     Int
  sp_score     Int

  @@map("contests")
}

model Outcomes {
  id           Int      @id @default(autoincrement())
  contest_extId Int
  round_extId  Int
  round_order  Int
  h            Int
  m            String
  o            Int

  @@map("outcomes")
}
